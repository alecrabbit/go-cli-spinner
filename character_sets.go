package spinner

import (
    "fmt"
    "time"

    "github.com/mattn/go-runewidth"
)

const (
    clockOneOClock = '\U0001F550'
    clockOneThirty = '\U0001F55C'
)

const MaxCharSetSize = 60


// Declared spinner types
const (
    BlockVertical int = iota
    // Arrows
    BouncingBlock
    BouncingBlock2
    RotatingCircle
    Clock
    HalfClock
    HalfClock2
    Snake
    Snake2
    Snake3
    Dots13
    Dots14
    BlockHorizontal
    // Toggle
    Arrows01
    Arrows02
    Arrows03
    Arrows04
    Dots21
    Dots22
    Dots23
    Dots24
    Dots25
    Dots26
    Dev
    Dev2
    // Weather
    Simple
)

// Line is alias for Simple
const Line = Simple

// // CharSets contains the available character sets
// var CharSets = map[int][]string{
//     // Arrows: {"Рєљ", "Рєќ", "РєЉ", "РєЌ", "Рєњ", "Рєў", "РєЊ", "РєЎ"}, // Ambiguous width
//     // Рєљ 1
//     // Рєќ 2
//     // РєЉ 1
//     // РєЌ 2
//     // Рєњ 1
//     // Рєў 2
//     // РєЊ 1
//     // РєЎ 2
//
//     Arrows01:       {"Рєљ", "РєЉ", "Рєњ", "РєЊ"},
//     Arrows02:       {"Рєќ", "РєЌ", "Рєў", "РєЎ"},
//     Arrows03:       {"РЄљ", "РЄќ", "РЄЉ", "РЄЌ", "РЄњ", "РЄў", "РЄЊ", "РЄЎ"},
//     Arrows04:       {"Рќ╣Рќ╣Рќ╣Рќ╣Рќ╣", "РќИРќ╣Рќ╣Рќ╣Рќ╣", "Рќ╣РќИРќ╣Рќ╣Рќ╣", "Рќ╣Рќ╣РќИРќ╣Рќ╣", "Рќ╣Рќ╣Рќ╣РќИРќ╣", "Рќ╣Рќ╣Рќ╣Рќ╣РќИ"},
//     Dev:            {"+"},                                              // Singe character used for dev purposes
//     Dev2:           {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}, // Number characters used for dev purposes
//     BlockVertical:  {"РќЂ", "РќЃ", "Рќё", "РќЁ", "Рќє", "РќЄ", "Рќѕ", "РќЄ", "Рќє", "РќЁ", "Рќё", "РќЃ", "РќЂ"},
//     BouncingBlock:  {"Рќќ", "Рќў", "РќЮ", "РќЌ"},
//     RotatingCircle: {"РЌљ", "РЌЊ", "РЌЉ", "РЌњ"},
//     Snake:          {"РБЙ", "РБй", "РБ╗", "Рб┐", "РА┐", "РБЪ", "РБ»", "РБи"},
//     Snake2:         {"РаЈ", "РаЏ", "Ра╣", "РбИ", "РБ░", "РБц", "РБє", "РАЄ"},
//     Snake3: {
//         "РбђРађ", "РАђРађ", "РаёРађ", "РбѓРађ", "РАѓРађ", "РаЁРађ", "РбЃРађ", "РАЃРађ", "РаЇРађ", "РбІРађ", "РАІРађ", "РаЇРаЂ", "РбІРаЂ", "РАІРаЂ", "РаЇРаЅ", "РаІРаЅ", "РаІРаЅ",
//         "РаЅРаЎ", "РаЅРаЎ", "РаЅРаЕ", "РаѕРбЎ", "РаѕРАЎ", "РбѕРаЕ", "РАђРбЎ", "РаёРАЎ", "РбѓРаЕ", "РАѓРбў", "РаЁРАў", "РбЃРае", "РАЃРбљ", "РаЇРАљ", "РбІРаа", "РАІРбђ", "РаЇРАЂ",
//         "РбІРаЂ", "РАІРаЂ", "РаЇРаЅ", "РаІРаЅ", "РаІРаЅ", "РаЅРаЎ", "РаЅРаЎ", "РаЅРаЕ", "РаѕРбЎ", "РаѕРАЎ", "РаѕРаЕ", "РађРбЎ", "РађРАЎ", "РађРаЕ", "РађРбў", "РађРАў", "РађРае",
//         "РађРбљ", "РађРАљ", "РађРаа", "РађРбђ", "РађРАђ",
//     },
//     BlockHorizontal: {"РќЅ", "Рќі", "РќІ", "Рќї", "РќЇ", "Рќј", "РќЈ", "Рќј", "РќЇ", "Рќї", "РќІ", "Рќі", "РќЅ"},
//     BouncingBlock2: {
//         "|   ", " |  ", "  | ", "   |", "   |", "  | ", " |  ", "|   "},
//     Dots13: {"РаЂ", "Раѓ", "Раё", "РАђ", "Рбђ", "Раа", "Раљ", "Раѕ"},
//     Dots14: {"РаІ", "РаЎ", "Ра╣", "РаИ", "Ра╝", "Ра┤", "Рад", "РаД", "РаЄ", "РаЈ"},
//
//     Dots21: {"РаЂ", "РаЂ", "РаЅ", "РаЎ", "Раџ", "Рањ", "Раѓ", "Раѓ", "Рањ", "Ра▓", "Ра┤", "Рац", "Раё", "Раё", "Рац", "Раа", "Раа", "Рац", "Рад", "Раќ", "Рањ", "Раљ", "Раљ", "Рањ", "РаЊ", "РаІ", "РаЅ", "Раѕ", "Раѕ"},
//     Dots22: {"Раѕ", "РаЅ", "РаІ", "РаЊ", "Рањ", "Раљ", "Раљ", "Рањ", "Раќ", "Рад", "Рац", "Раа", "Раа", "Рац", "Рад", "Раќ", "Рањ", "Раљ", "Раљ", "Рањ", "РаЊ", "РаІ", "РаЅ", "Раѕ"},
//     Dots23: {"РаЂ", "РаЅ", "РаЎ", "Раџ", "Рањ", "Раѓ", "Раѓ", "Рањ", "Ра▓", "Ра┤", "Рац", "Раё", "Раё", "Рац", "Ра┤", "Ра▓", "Рањ", "Раѓ", "Раѓ", "Рањ", "Раџ", "РаЎ", "РаЅ", "РаЂ"},
//     Dots24: {"РаІ", "РаЎ", "Раџ", "Рањ", "Раѓ", "Раѓ", "Рањ", "Ра▓", "Ра┤", "Рад", "Раќ", "Рањ", "Раљ", "Раљ", "Рањ", "РаЊ", "РаІ"},
//     Dots25: {".  ", ".. ", "...", " ..", "  .", "   "},
//     Dots26: {"Рб╣", "Рб║", "Рб╝", "РБИ", "РБЄ", "РАД", "РАЌ", "РАЈ"},
//
//     // Toggle:          {"Рќа", "РќА", "Рќф", "РќФ"}, // Ambiguous width
//     // Рќа 1
//     // РќА 1
//     // Рќф 2
//     // РќФ 2
//     // Weather: { // Ambiguous width
//     //     "­Ъїц ", "­Ъїц ", "­Ъїц ", "­Ъїц ", "РЏЁ№ИЈ", "­ЪїЦ ", "РўЂ№ИЈ ", "­ЪїД ", "­Ъїе ", "­ЪїД ", "­Ъїе ", "­ЪїД ", "­Ъїе ", "РЏѕ ",
//     //     "РЏѕ ", "­Ъїе ", "РЏѕ ", "­ЪїД ", "­Ъїе ", "РўЂ№ИЈ ", "­ЪїЦ ", "РЏЁ№ИЈ", "­Ъїц ",
//     // },
//     Simple: {"|", "\\", "Рћђ", "/"},
// }

type Settings struct {
    interval time.Duration // interval between spinner refreshes
    chars    []string      //
}

// CharSets contains the available character sets
var NewCharSets = map[int]Settings{
    // Arrows: {
    //     120,
    //     []string{"Рєљ", "Рєќ", "РєЉ", "РєЌ", "Рєњ", "Рєў", "РєЊ", "РєЎ"}, // Ambiguous width, issue in runewidth
    // },
    // Рєљ 1
    // Рєќ 2
    // РєЉ 1
    // РєЌ 2
    // Рєњ 1
    // Рєў 2
    // РєЊ 1
    // РєЎ 2

    Arrows01: {
        120,
        []string{"Рєљ", "РєЉ", "Рєњ", "РєЊ"},
    },
    Arrows02: {
        120,
        []string{"Рєќ", "РєЌ", "Рєў", "РєЎ"},
    },
    Arrows03: {
        120,
        []string{"РЄљ", "РЄќ", "РЄЉ", "РЄЌ", "РЄњ", "РЄў", "РЄЊ", "РЄЎ"},
    },
    Arrows04: {
        120,
        []string{"Рќ╣Рќ╣Рќ╣Рќ╣Рќ╣", "РќИРќ╣Рќ╣Рќ╣Рќ╣", "Рќ╣РќИРќ╣Рќ╣Рќ╣", "Рќ╣Рќ╣РќИРќ╣Рќ╣", "Рќ╣Рќ╣Рќ╣РќИРќ╣", "Рќ╣Рќ╣Рќ╣Рќ╣РќИ"},
    },
    Snake2: {
        120,
        []string{"РаЈ", "РаЏ", "Ра╣", "РбИ", "РБ░", "РБц", "РБє", "РАЄ"},
    },

    // Dev:            {"+"},                                              // Singe character used for dev purposes
    // Dev2:           {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"}, // Number characters used for dev purposes
    // BlockVertical:  {"РќЂ", "РќЃ", "Рќё", "РќЁ", "Рќє", "РќЄ", "Рќѕ", "РќЄ", "Рќє", "РќЁ", "Рќё", "РќЃ", "РќЂ"},
    // BouncingBlock:  {"Рќќ", "Рќў", "РќЮ", "РќЌ"},
    // RotatingCircle: {"РЌљ", "РЌЊ", "РЌЉ", "РЌњ"},
    // Snake:          {"РБЙ", "РБй", "РБ╗", "Рб┐", "РА┐", "РБЪ", "РБ»", "РБи"},
    // Snake3: {
    //     "РбђРађ", "РАђРађ", "РаёРађ", "РбѓРађ", "РАѓРађ", "РаЁРађ", "РбЃРађ", "РАЃРађ", "РаЇРађ", "РбІРађ", "РАІРађ", "РаЇРаЂ", "РбІРаЂ", "РАІРаЂ", "РаЇРаЅ", "РаІРаЅ", "РаІРаЅ",
    //     "РаЅРаЎ", "РаЅРаЎ", "РаЅРаЕ", "РаѕРбЎ", "РаѕРАЎ", "РбѕРаЕ", "РАђРбЎ", "РаёРАЎ", "РбѓРаЕ", "РАѓРбў", "РаЁРАў", "РбЃРае", "РАЃРбљ", "РаЇРАљ", "РбІРаа", "РАІРбђ", "РаЇРАЂ",
    //     "РбІРаЂ", "РАІРаЂ", "РаЇРаЅ", "РаІРаЅ", "РаІРаЅ", "РаЅРаЎ", "РаЅРаЎ", "РаЅРаЕ", "РаѕРбЎ", "РаѕРАЎ", "РаѕРаЕ", "РађРбЎ", "РађРАЎ", "РађРаЕ", "РађРбў", "РађРАў", "РађРае",
    //     "РађРбљ", "РађРАљ", "РађРаа", "РађРбђ", "РађРАђ",
    // },
    // BlockHorizontal: {"РќЅ", "Рќі", "РќІ", "Рќї", "РќЇ", "Рќј", "РќЈ", "Рќј", "РќЇ", "Рќї", "РќІ", "Рќі", "РќЅ"},
    // BouncingBlock2: {
    //     "|   ", " |  ", "  | ", "   |", "   |", "  | ", " |  ", "|   "},
    // Dots13: {"РаЂ", "Раѓ", "Раё", "РАђ", "Рбђ", "Раа", "Раљ", "Раѕ"},
    // Dots14: {"РаІ", "РаЎ", "Ра╣", "РаИ", "Ра╝", "Ра┤", "Рад", "РаД", "РаЄ", "РаЈ"},
    //
    // Dots21: {"РаЂ", "РаЂ", "РаЅ", "РаЎ", "Раџ", "Рањ", "Раѓ", "Раѓ", "Рањ", "Ра▓", "Ра┤", "Рац", "Раё", "Раё", "Рац", "Раа", "Раа", "Рац", "Рад", "Раќ", "Рањ", "Раљ", "Раљ", "Рањ", "РаЊ", "РаІ", "РаЅ", "Раѕ", "Раѕ"},
    // Dots22: {"Раѕ", "РаЅ", "РаІ", "РаЊ", "Рањ", "Раљ", "Раљ", "Рањ", "Раќ", "Рад", "Рац", "Раа", "Раа", "Рац", "Рад", "Раќ", "Рањ", "Раљ", "Раљ", "Рањ", "РаЊ", "РаІ", "РаЅ", "Раѕ"},
    // Dots23: {"РаЂ", "РаЅ", "РаЎ", "Раџ", "Рањ", "Раѓ", "Раѓ", "Рањ", "Ра▓", "Ра┤", "Рац", "Раё", "Раё", "Рац", "Ра┤", "Ра▓", "Рањ", "Раѓ", "Раѓ", "Рањ", "Раџ", "РаЎ", "РаЅ", "РаЂ"},
    // Dots24: {"РаІ", "РаЎ", "Раџ", "Рањ", "Раѓ", "Раѓ", "Рањ", "Ра▓", "Ра┤", "Рад", "Раќ", "Рањ", "Раљ", "Раљ", "Рањ", "РаЊ", "РаІ"},
    // Dots25: {".  ", ".. ", "...", " ..", "  .", "   "},
    // Dots26: {"Рб╣", "Рб║", "Рб╝", "РБИ", "РБЄ", "РАД", "РАЌ", "РАЈ"},
    //
    // // Toggle:          {"Рќа", "РќА", "Рќф", "РќФ"}, // Ambiguous width
    // // Рќа 1
    // // РќА 1
    // // Рќф 2
    // // РќФ 2
    // // Weather: { // Ambiguous width
    // //     "­Ъїц ", "­Ъїц ", "­Ъїц ", "­Ъїц ", "РЏЁ№ИЈ", "­ЪїЦ ", "РўЂ№ИЈ ", "­ЪїД ", "­Ъїе ", "­ЪїД ", "­Ъїе ", "­ЪїД ", "­Ъїе ", "РЏѕ ",
    // //     "РЏѕ ", "­Ъїе ", "РЏѕ ", "­ЪїД ", "­Ъїе ", "РўЂ№ИЈ ", "­ЪїЦ ", "РЏЁ№ИЈ", "­Ъїц ",
    // // },
    // Simple: {"|", "\\", "Рћђ", "/"},
}

func init() {
    var clockChars []string
    var halfClockChars []string
    var halfClockChars2 []string
    // Fill clocks char sets
    for i := rune(0); i < 12; i++ {
        clockChars = append(clockChars, string([]rune{clockOneOClock + i}))
        halfClockChars = append(halfClockChars, string([]rune{clockOneOClock + i}), string([]rune{clockOneThirty + i}))
    }
    halfClockChars2 = make([]string, len(clockChars))
    copy(halfClockChars2, clockChars)
    for i := rune(0); i < 12; i++ {
        halfClockChars2 = append(halfClockChars2, string([]rune{clockOneThirty + i}))
    }
    // Create clock sets
    NewCharSets[Clock] = Settings{150, clockChars}
    NewCharSets[HalfClock] = Settings{300, halfClockChars}
    NewCharSets[HalfClock2] = Settings{150, halfClockChars2}
    // Check CharSets for width conformity
    checkCharSets()
}

func checkCharSets() {
    // Check NewCharSets for width conformity
    for n := range NewCharSets {
        err := checkCharSet(NewCharSets[n].chars)
        if err != nil {
            panic(err)
        }
    }
}

func checkCharSet(c []string) error {
    if len(c) > MaxCharSetSize {
        return fmt.Errorf("given charset is too big: %v, max: %v", len(c), MaxCharSetSize)
    }
    var widths []int
    for _, c := range c {
        width := runewidth.StringWidth(c)
        widths = append(widths, width)
    }
    for _, w := range widths {
        if w != widths[0] {
            return fmt.Errorf("\nAmbiguous widths for char set:\n %v\n %v\n", c, widths)
        }
    }
    return nil
}
